# Задание-1:
# Матрицы в питоне реализуются в виде вложенных списков:
# Пример. Дано:
matrix = [[1, 0, 8],
          [3, 4, 1],
          [0, 4, 2]]

# Выполнить поворот (транспонирование) матрицы
# Пример. Результат:
# matrix_rotate = [[1, 3, 0],
#                  [0, 4, 4],
#                  [8, 1, 2]]

# Суть сложности hard: Решите задачу в одну строку

transponent = list(map(list, zip(*matrix)))
print(transponent)

# Задание-2:
# Найдите наибольшее произведение пяти последовательных цифр в 1000-значном числе.
# Выведите произведение и индекс смещения первого числа последовательных 5-ти цифр.
# Пример 1000-значного числа:
number = """
73167176531330624919225119674426574742355349194934
96983520312774506326239578318016984801869478851843
85861560789112949495459501737958331952853208805511
12540698747158523863050715693290963295227443043557
66896648950445244523161731856403098711121722383113
62229893423380308135336276614282806444486645238749
30358907296290491560440772390713810515859307960866
70172427121883998797908792274921901699720888093776
65727333001053367881220235421809751254540594752243
52584907711670556013604839586446706324415722155397
53697817977846174064955149290862569321978468622482
83972241375657056057490261407972968652414535100474
82166370484403199890008895243450658541227588666881
16427171479924442928230863465674813919123162824586
17866458359124566529476545682848912883142607690042
24219022671055626321111109370544217506941658960408
07198403850962455444362981230987879927244284909188
84580156166097919133875499200524063689912560717606
05886116467109405077541002256983155200055935729725
71636269561882670428252483600823257530420752963450"""

# Задание-3 (Ферзи):
# Известно, что на доске 8×8 можно расставить 8 ферзей так, чтобы они не били
# друг друга. Вам дана расстановка 8 ферзей на доске.
# Определите, есть ли среди них пара бьющих друг друга.
# Программа получает на вход восемь пар чисел,
# каждое число от 1 до 8 — координаты 8 ферзей.
# Если ферзи не бьют друг друга, выведите слово NO, иначе выведите YES.

spot_1 = [int(x) for x in input().split()]
spot_2 = [int(x) for x in input().split()]
spot_3 = [int(x) for x in input().split()]
spot_4 = [int(x) for x in input().split()]
spot_5 = [int(x) for x in input().split()]
spot_6 = [int(x) for x in input().split()]
spot_7 = [int(x) for x in input().split()]
spot_8 = [int(x) for x in input().split()]


all_spots = [[0, 0, 0, 0, 0, 0, 0, 0],
             [0, 0, 0, 0, 0, 0, 0, 0],
             [0, 0, 0, 0, 0, 0, 0, 0],
             [0, 0, 0, 0, 0, 0, 0, 0],
             [0, 0, 0, 0, 0, 0, 0, 0],
             [0, 0, 0, 0, 0, 0, 0, 0],
             [0, 0, 0, 0, 0, 0, 0, 0],
             [0, 0, 0, 0, 0, 0, 0, 0]]
all_spots[spot_1[0]-1][spot_1[1]-1] = 1
all_spots[spot_2[0]-1][spot_2[1]-1] = 1
all_spots[spot_3[0]-1][spot_3[1]-1] = 1
all_spots[spot_4[0]-1][spot_4[1]-1] = 1
all_spots[spot_5[0]-1][spot_5[1]-1] = 1
all_spots[spot_6[0]-1][spot_6[1]-1] = 1
all_spots[spot_7[0]-1][spot_7[1]-1] = 1
all_spots[spot_8[0]-1][spot_8[1]-1] = 1

line_sums = [0, 0, 0, 0, 0, 0, 0, 0]
column_sums = [0, 0, 0, 0, 0, 0, 0, 0]
cross_sums = [0, 0, 0, 0, 0, 0, 0, 0]
reverse_cross_sums = [0, 0, 0, 0, 0, 0, 0, 0]
length = len(all_spots[0])

for i in range(length):
    line_sums[i] += sum(all_spots[i])
    for j in range(length):
        column_sums[j] += all_spots[i][j]
        if (j + i) <= (length-1):
            cross_sums[j] += all_spots[i][j + i]
            reverse_cross_sums[-j-1] += all_spots[i][-j - 1 - i]

if max(line_sums) > 1:
    print('YES')
elif max(column_sums) > 1:
    print('YES')
elif max(cross_sums) > 1:
    print('YES')
elif max(reverse_cross_sums) > 1:
    print('YES')
else:
    print('NO')
